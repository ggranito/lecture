0.  How much time did you spend on this pre-class exercise, and when?

    About 1.5 hours on the night before class.

1.  What are one or two points that you found least clear in the
    10/08 slide decks (including the narration)?

    It was very good.

2.  Now that we are now basically a third of the way into the
    semester, and are (mostly) settled into the steady pace of things,
    I would appreciate your feedback on what is working well or poorly
    about the class.  Comments on things I can reasonably change are
    particularly useful -- venting about the cluster, for example, is
    understandable but doesn't help me that much in adjusting!

    Sometimes expectations about assignments are not very clear. It is
    difficult to know what we need to accomplish to be successful.

3.  The ring demo implements the protocol described in the particle
    systems slide deck from 9/15:

    http://cornell-cs5220-f15.github.io/slides/2015-09-15-particle.html#/11

    a) In your own words, describe what ring.c is doing.

        ring.c establishes a ring of computation. Each member of the ring
        does a computation, and passes the results on to the next element
        in the ring. Once all nodes have passed data, each ring has new
        data to do computation on. This is run for some number of steps.

    b) How might you modify the code to have the same computational
       pattern, but using non-blocking communication rather than
       MPI_Sendrecv?  Note that according to the MPI standard,
       one isn't supposed to read from a buffer that is being
       handled by a non-blocking send, so it is probably necessary
       to use three temporary buffers rather than the current two.

       Each ring could have another output block of memory. It could
       alternate which output block is written to, then after finishing
       local computations, it could invoke a asynchronous send, switch
       output block, wait to receive data and keep doing local computations.
       